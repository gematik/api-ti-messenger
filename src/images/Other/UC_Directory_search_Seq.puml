@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20

}
autonumber

actor U as "Akteur in der Rolle\nUser"
participant cl as "TI-Messenger-Client"
participant mp as "Messenger Proxy"
participant hs as "Matrix-Homeserver"
box <size:18>VZD-FHIR-Directory</size> #WhiteSmoke
  participant fp as "FHIR-Proxy"
  participant au as "Auth-Service"
  participant fd as "FHIR-Directory"
end box

|||
note over U, hs: \n<size:17>Der Akteur ist erfolgreich beim Messenger-Service angemeldet</size>\n
|||

      activate cl
    U->cl:Suchparameter für \nFHIR-Ressourcen \n eingeben
    cl->cl: prüfe ob noch gültiges \nsearch-accesstoken\nvorliegt

|||
alt#LightGrey #AliceBlue <size:16>kein gültiges search-accesstoken vorhanden</size>
|||
      

    cl->mp: GET /_matrix/client/user/\n{userId}/openid/request_token 
      activate mp
    mp->hs: HTTP Forward 

      activate hs
    |||
    hs-->mp: Matrix-OpenID-Token
      deactivate hs
    mp-->cl: HTTP(S) Forward
      deactivate mp
      
    |||
    cl->au: GET /tim-authenticate?mxId=... (Auth Header mit Matrix-OpenID-Token)
      activate au
    au->au: Prüfe ob \nMatrix Server Name in \nder Föderation enthalten ist

|||
break#LightGrey #MistyRose <size:16>Matrix Server Name nicht in der Föderation enthalten</size>
|||    
    au-->cl: Fehlermeldung
end

|||
        au->mp: GET /openid/userinfo?access_token=Matrix-OpenID-Token
          activate mp
        mp->hs: HTTP(S) Forward
          activate hs
        hs->hs: prüfe Matrix-OpenID-Token
        hs-->mp: MXID des Nutzers
          deactivate hs
        mp-->au: HTTP(S) Forward
          deactivate mp
        au->au: erzeuge \nsearch-accesstoken 
        au-->cl: search-accesstoken
          deactivate au
          deactivate fp
|||
end


    |||
    cl->fp: POST /search?... (Auth Header mit search-accesstoken)
    |||
      activate fp
    fp->fp: prüfe search-accesstoken
    |||
    break#LightGrey #MistyRose <size:16>kein gültiges search-accesstoken</size>
      fp-->cl: HTTP 401 Fehlermeldung 
    |||
    end
   
|||
alt#LightGrey #AliceBlue <size:16>HealthcareService-Einträge werden gesucht</size>
|||
    fp->fd: POST /search/HealthcareService/?
      activate fd
    note left
    <size:16>Finde Datensatz für TelematikID</size>
    end note
    fd-->fp: Suchergebnis (FHIR Bundle)
      deactivate fd
|||
end

|||
alt#LightGrey #AliceBlue <size:16>PractitionerRole-Einträge werden gesucht</size>
|||
    fp->fd: POST /search/PractitionerRole/?
      activate fd
    note left
    <size:16>Finde Datensatz für MXID </size>
    end note
    fd-->fp: Suchergebnis (FHIR Bundle)
      deactivate fd
|||
end
|||

  fp-->cl: Suchergebnis (FHIR Bundle)
  deactivate fp
  cl-->U: Suchergebnis (FHIR Bundle)
   |||
    
    deactivate cl

@enduml
