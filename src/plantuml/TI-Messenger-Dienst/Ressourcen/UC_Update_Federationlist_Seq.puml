/' 
# TI-Messenger 1.1.1
# TI-Messenger-Dienst
# UC - 
# Sequence Diagram
# Name: Föderationsliste aktualisieren
'/

@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontName Impact
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
ActorFontName Aapex
}

box <size:18>Messenger-Service\n #WhiteSmoke
participant MP as "Messenger-Proxy"
end box
participant RD as "Registrierungs-Dienst"
box <size:18>VZD-FHIR-Directory</size> #WhiteSmoke
  participant FP as "FHIR-Proxy"
  participant AS as "OAuth-Service"
end box

== <size:16>scheduled</size> ==

loop#LightGrey <size:16>alle 1h</size>
  alt#LightGrey <size:16>HealthState_VZD=gesund ODER Alter_Föderationsliste>=1h</size>
  activate RD
  |||
  ref over AS, FP, RD
    <size:16>Provider authentifizieren und Föderationsliste abrufen</size>
  end ref
  |||

  else <size:16>HealthState_VZD!=gesund</size>
    RD->RD: HealthStateCheck einleiten(HealthStateCheck_VZD=0)
    loop#LightGrey <size:16>alle 5min UND HealthStateCheck_VZD<=3</size>
      |||
      ref over AS, FP, RD
        <size:16>Provider authentifizieren und Föderationsliste abrufen</size>
      end ref
      |||
      alt#LightGrey <size:16>HealthState_VZD=gesund</size>
        break#LightGrey #LightPink
          RD->RD: HealthStateCheck_VZD abbrechen()
        end
      else <size:16>HealthState_VZD!=gesund</size>
        RD->RD: HealthStateCheck_VZD erhöhen\n(HealthStateCheck_VZD+1)
        alt#LightGrey <size:16>HealthStateCheck_VZD=3</size>
          RD ->?: Incident-Event erzeugen()
          RD->RD++: letzte vorhandene Föderationsliste puffern() \n{TTL_Föderationsliste=48h}
          return Föderationsliste
        |||
        end
      end
    end 
    deactivate RD
  end
end

== <size:16>on request</size> ==

MP <-?: Föderationsliste \naktualisieren()
activate MP
MP->RD: GET /I_internVerification(FLVersion_MP) 
note right: <size:16>Schnittstelle wird nicht \n<size:16>durch die gematik spezifiziert</size>
|||
  Activate RD

alt#LightGrey <size:16>HealthState_VZD=gesund UND Alter_Föderationsliste>=1h </size>

  |||
  ref over AS, FP, RD
    <size:16>Provider authentifizieren und Föderationsliste abrufen</size>
  end ref
  |||
end

break#LightGrey #LightPink <size:16>Alter_Föderationsliste>TTL_Föderationsliste</size>
  RD-->MP: FLStatus_RD=veraltet
  MP->MP: unterbinde Registrierungsdienst-Requests(Dauer=1h)
  MP->MP: blockiere Kommunikation zu anderen Homeservern()
  |||
end

alt#LightGrey <size:16>Alter_Föderationsliste<1h ODER TTL_Föderationsliste vorhanden</size>
  RD->RD++: vergleiche Versionen\n(FLVersion_MP, FLVersion_RD)
  return Vergleichsergebnis_RD
    
  alt#LightGrey <size:16>Vergleichsergebnis_RD=identisch</size>
    ||| 
    RD-->MP: FLStatus_MP=aktuell
    |||
      
  else <size:16>Vergleichsergebnis_RD!=identisch</size>
    RD-->MP: Föderationsliste, x5c-Zertifikatsliste
    ref over MP
      <size:16>Signatur der Föderationsliste prüfen</size>
    end ref
    |||
  end
  |||
  
else <size:16>FLÄnderungsFlag vorhanden ODER FLVersion_MP=NULL</size>
  RD-->MP: Föderationsliste, x5c-Zertifikatsliste
  Deactivate RD
  ref over MP
    <size:16>Signatur der Föderationsliste prüfen</size>
  end ref
  MP-[hidden]> MP
  deactivate MP
end
@enduml