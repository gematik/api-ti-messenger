/' 
# TI-Messenger 1.1
# TI-Messenger-Dienst
# UC - 10064
# Sequence Diagram
# Name: Föderationszugehörigkeit eines Messenger-Service prüfen
'/

@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontName Impact
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
ActorFontName Aapex
}

box <size:18>Messenger-Service\n #WhiteSmoke
participant MP as "Messenger-Proxy"
participant MH as "Matrix-Homeserver"
end box
participant RD as "Registrierungs-Dienst"
box <size:18>VZD-FHIR-Directory</size> #WhiteSmoke
  participant FP as "FHIR-Proxy"
  participant AS as "OAuth-Service"
end box

legend bottom right
    __Legende__
    <font color=blue>optionaler Bestandteil in dieser Spezifikation</font>
    <font color=red>noch zu klären</font>
endlegend

== <size:16>scheduled</size> ==

loop#LightGrey #AliceBlue <size:16>alle 1h</size>
  alt <size:16>HealthState_VZD=gesund ODER Alter_Föderationsliste>=1h</size>
    activate RD
    RD->AS: GET /authenticate (client_id, client_secret) {<10s := HealthState_VZD=gesund}
      Activate AS
    AS->AS: Credentials prüfen\n(client_id, client_secret)
    AS-->RD: provider-accesstoken 
    Deactivate AS  
    RD->FP++: GET /tim-provider-services/getFederationList (provider-accesstoken)\n{<10s := HealthState_VZD=gesund}
    FP->FP: Token prüfen(provider-accesstoken)
    break#LightGrey #LightPink <size:16>provider-accesstoken nicht akzeptiert</size>
      FP-->RD: ResponseType=Unauthorized
    end 
    return Föderationsliste, x5c-Zertifikatsliste
    alt#LightGrey #LightBlue <size:16>HealthState_VZD=gesund</size>
      RD->RD++: Föderationsliste aktualisieren(Föderationsliste)
      note right: <font color=red>Vertraut RD dem FP?</font>
      return Föderationsliste
      RD->RD: Alter_Föderationsliste zurücksetzen(Alter_Föderationsliste=0s)
    end 
  else <size:16>HealthState_VZD!=gesund</size>
    RD ->?: erzeuge Incident bei VZD-Anbieter()
    RD->RD++: letzte vorhandene Föderationsliste puffern() {TTL_Föderationsliste=24h}
    return Föderationsliste
    RD-[hidden]> RD
    deactivate RD
  end
end

== <size:16>on request</size> ==

MP <-?: Föderationsliste \naktualisieren()
activate MP
MP->RD: GET /I_internVerification(FLVersion_MP) 
note right: <size:16>Schnittstelle wird nicht \n<size:16>durch die gematik spezifiziert</size>
|||
  Activate RD

alt <size:16>HealthState_VZD=gesund UND Alter_Föderationsliste>=1h </size>

  alt#LightGrey #AliceBlue <size:16>kein gültiges provider-accesstoken vorhanden</size>
    |||
    RD->AS: GET /authenticate (client_id, client_secret) {<10s := HealthState_VZD=gesund}
    note right
      <size:16>OAuth Client credentials flow</size>
    end note
      Activate AS
    AS->AS: Credentials prüfen\n(client_id, client_secret)
    AS-->RD: <font color=red>status, </font>provider-accesstoken 
      Deactivate AS  
    |||
  end

  |||
  RD->FP: GET /tim-provider-services/getFederationList (provider-accesstoken, FLVersion_RD)\n{<10s := HealthState_VZD=gesund}
    Activate FP
  FP->FP: Token prüfen(provider-accesstoken)

  break#LightGrey #LightPink <size:16>provider-accesstoken nicht akzeptiert</size>
    FP-->RD: ResponseType=Unauthorized
  end 
  |||
  FP<-?: FLVersion_Main
  FP->FP++: vergleiche Versionen\n(FLVersion_RD, FLVersion_Main)
  return Vergleichsergebnis_FP

|||

  alt#LightGrey #AliceBlue <size:16>Vergleichsergebnis_FP=identisch</size>
    FP-->RD: FLStatus_RD=aktuell
    |||
  else <size:16>Vergleichsergebnis_FP!=identisch</size>
    FP-->RD: Föderationsliste, x5c-Zertifikatsliste
        Deactivate FP
    RD->RD++: Föderationsliste aktualisieren(Föderationsliste)
    note right: <font color=red>Vertraut RD dem FP?</font>
    return Föderationsliste, FLÄnderungsFlag
    RD->RD: Alter_Föderationsliste zurücksetzen(Alter_Föderationsliste=0s)
    |||
  end
  |||

else <size:16>HealthState_VZD!=gesund ODER Alter_Föderationsliste<1h</size>
    RD->RD: FLStatus_RD=aktuell
end

break#LightGrey #LightPink <size:16>Alter_Föderationsliste>TTL_Föderationsliste</size>
RD-->MP: FLStatus_RD=veraltet
end

alt#LightGrey #AliceBlue <size:16>FLStatus_RD=aktuell</size>
    RD->RD++: vergleiche Versionen\n(FLVersion_MP, FLVersion_RD)
    return Vergleichsergebnis_RD
      
      alt#LightGrey #LightBlue <size:16>Vergleichsergebnis_RD=identisch</size>
      ||| 
        RD-->MP: FLStatus_MP=aktuell
          |||
          
      else <size:16>Vergleichsergebnis_RD!=identisch</size>
        RD-->MP: Föderationsliste, x5c-Zertifikatsliste
        MP->MP++: Signatur der Föderationsliste prüfen(Föderationsliste, x5c-Zertifikatsliste[1])
        return Signaturprüfergebnis
        |||
        loop#LightGrey #LightSteelBlue <size:16><font color=blue>für jeden Eintrag von x5c-Zertifikatsliste</font></size>
          MP->?: <font color=blue>Public-OCSP-Zertifikatsprüf-Request stellen(x5c-Zertifikat)</font>
          MP <--?: <font color=blue>OCSP-Response</font>
        end
        alt#LightGrey #LightSteelBlue <size:16>Signaturprüfergebnis=gültig <font color=blue>UND jeder OCSP-Response.CertificateStatusValue=good</font></size>
          MP->MP: Föderationsliste aktualisieren(Föderationsliste)
        end
        |||
      end
    |||
    
    else <size:16>FLÄnderungsFlag vorhanden</size>
      RD-->MP: Föderationsliste, x5c-Zertifikatsliste
        Deactivate RD
        MP->MP++: Signatur der Föderationsliste prüfen(Föderationsliste, x5c-Zertifikatsliste[1])
        return Signaturprüfergebnis
        |||
        loop#LightGrey #LightSteelBlue <size:16><font color=blue>für jeden Eintrag von x5c-Zertifikatsliste</font></size>
          MP->?: <font color=blue>Public-OCSP-Zertifikatsprüf-Request stellen(x5c-Zertifikat)</font>
          MP <--?: <font color=blue>OCSP-Response</font>
        end
        alt#LightGrey #LightSteelBlue <size:16>Signaturprüfergebnis=gültig <font color=blue>UND jeder OCSP-Response.CertificateStatusValue=good</font></size>
          MP->MP: Föderationsliste aktualisieren(Föderationsliste)
        end
        deactivate MP
        |||
    |||
end
@enduml
